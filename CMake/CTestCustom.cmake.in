list(APPEND CTEST_CUSTOM_MEMCHECK_IGNORE)

list(APPEND CTEST_CUSTOM_WARNING_MATCH
  "{standard input}:[0-9][0-9]*: Warning: ")

list(APPEND CTEST_CUSTOM_WARNING_EXCEPTION
  # Java compilation warnings that don't matter.
  "^1 warning$"
  "bootstrap class path not set in conjunction with -source"

  # C4275 carries with it a note that we don't care about. std::exception is
  # the main culprit here.
  "vcruntime_exception.h.*: note: see declaration of 'std::exception'"

  # GetVersion is deprecated, but its use is OK.
  "sysinfoapi.h.*: note: see declaration of 'GetVersion'"

  # Suppress notes from template instantiation backtraces.
  "note: see reference to (class|function) template instantiation"
  "note: while compiling class template member function"

  # This is secondary output from clang, not indicating the warning per se.
  "[0-9]* warnings? generated"
  "note: \\(skipping [0-9]* expansions in backtrace"
  "note: expanded from (here|macro)"

  # This is secondary output from MSVC, not indicate the warning per se.
  "note: see declaration of"

  # function cast in vtkLogger/loguru
  "vtkLogger.cxx.*: warning: cast between incompatible function types"

  # Qt headers cause C4127 warnings with MSVC. Nothing we can do to fix them.
  "[Qq]t([Cc]ore|[Gg]ui|[Tt]est|[Ww]idgets).*(warning|note)"
  # Qt has some functions marked as `__forceinline` which MSVC refuses to inline.
  "[Qq]t.*warning C4714"
  "[Qq]t.*note: see declaration of")

set(cdash_show_third_party_warnings "@VTK_ENABLE_CDASH_THIRD_PARTY_WARNINGS@")
if (NOT cdash_show_third_party_warnings)
  list(APPEND CTEST_CUSTOM_WARNING_EXCEPTION
    # HDF5 lex/yacc sources compilation lacks the "ThirdParty" part of the path.
    "hl/src/H5LT(parse|analyze)"

    # Suppress ThirdParty source code from displaying warnings.
    "[Tt]hird[Pp]arty")
endif ()

list(APPEND CTEST_CUSTOM_COVERAGE_EXCLUDE
  "vtk[^\\.]+(Java|Python).cxx"
  ".*Testing.Cxx.*cxx"
  ".*Testing.Cxx.*h"
  ".*moc_.*cxx"

  # Exclude files from the Utilities directories
  ".*/Utilities/.*"
  ".*/ThirdParty/.*")
